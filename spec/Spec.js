var chai = require("chai");
var expect = chai.expect;
var Board = require("../LaserMaze").Board;

describe('Laser Maze with Prisms and Mirrors', function() {

	var tests = {
		1: {
			input: "@--\n---\n---",
			output: 3
		},
		2: {
			input: "@-v\n---\n---",
			output: 5
		},
		3: {
			input: "@-v\n---\n--<",
			output: 7
		},
		4: {
			input: "@-v\n---\n-^<",
			output: 8
		},
		5: {
			input: "@-v\n->-\n-^<",
			output: 8
		},
		6: {
			input: "@-v\n->v\n-^<",
			output: -1
		},
		7: {
			input: "------>--v----<-----------<---<-------^-\n-------^--^--<v--^^-------<------->-----\n------^->-<----<-------->---^---<------>\nv--------<------<---<-^----^----------<-\n---<--<--------v-v^----^---^----v-------\n-<-^->--->->>-----<--->-----------------\n-v-@--------->v->>------>---v--<----<---\n^--------------<--^---<-->----><----^-v-\n------------->----<------->---v------>--\n-v^--v->-----<----<--------v------------\n^----->---^--------------------^-v------\n-------<-^-^-->---v-<<--------->^-------\n>--^^--------v-<-->---------------v---<-\n---^^-------^->-----<-----v-----^-v-<--v\n--v-->-----------v------>-<--v---^--^---\n----^----v--->------------v--------v<^<-\n>-------------v^----------->-<>->-------\n---->-^v--------------^-------->>-----^-\n-^--v---------<<--->>------<-<<---------\n-------<----v---<-----<<-<<---^--------^\n---v--v---^---------^--v--v-------<>----\n<-------------^---->----------->^->-----\n^<^->------<----------^-----<-------->--\n--<-<-<----<v------------------<-->-v-^-\n----------->---------v---^--v-<--->--^--\n<--^vv--------<^--v------------>-->----^\nv----^->--v>-------------------<------^-\n--------------v-<-<------<--v----^------\n-------<-<-^--^--->----->--v--^-^-------\n^-------<----->-->---->---------^----^--\n>^---------->--vv>-v---v---^------>-----\n---v->--<-----^-^------------v--->--^---\n---->-----------^--------->--v--v>----<-\n-v---><v---^--<-^---^-<-------->--->-<--\n-----<------^-^v^-----------^--<---<->--\n-------^-----^-------<^<--------v---<-->\n-^-<--------v---------<^------------v---\n----><--------><>-------v---v>----------\n^--------><----v----->-----v--<--->v----\n---->---->----------------------v-^--<--\n----<^--------^^------v----v--->-<--<---\n-------^^---^-----v---------^--<>--^vv--\n------^----v------------<<--------------\n----------------------->>-->-----v----v-\n----<----<----<---^<---^------v---------\n---^---------------^-->----^-v-----^----\n--^-v--v-----------><------------vv---v-\n-------v-------------------->->v-------<\n<---><><------<------<-^-v-----^-<^-----\n------>--------v--------->-v>---<-------",
			output: 84
		},
		8: {
			input: ">--^--<--v------><^<-^-^-->v<-v----->---\n-v---v------<---v--------v-----^---->-^-\n-<-----vv---------<--------------^v>----\n----------------<-----v--v-------v-^----\n-<--------v---^-^----------^>---<--->v--\n->----v-->----------<--->--^------------\n--v^-<>---------------->------v-v->-->^-\n-^---------------v-v--->------v-v-----^-\n-^-<--------<-v<-----v>--^^---->->----<-\n-----vv>----^^---^-----<----<>------>---\n------------^--------^-^-----<^-------v-\n----------------^-------------v-----^---\n----------<---------<v^^----->----------\nv---------v-->-->-->-----^---^----->-v--\n---------->>-^-----------<-----------v<<\n---------------v<<------^-------------^-\n----^--^----v---<---<---v-->------------\n--^>>-------->v------<v-^-----v-v----^^-\n--v----^v-^<-------------v-------^-->---\n----------^v-v-->---^<---<-----v-----<^-\n-------->--->----------->v---------^----\n<----v------v^--------^--^------^<-^----\nv---v<v--<---->--------------v-----<<--<\nv-----------<-<v-->---v--->--------^^---\n--<-->>-v-^----------------------------<\n-<v-----^-----^--------v-----v-----<v---\n--^-<-----------v---------v>------v---<<\n---->--^->-^-----^----------v------<----\n--<-^--v----------><v------->-----><<<>-\n--<--<----->---->vv----<---v--<--->---^-\n----------<>---------->-----^>^---------\nv---->--^--------<<-<-----<--^v-<>-----v\n-----<---<-<--------------<-^v--<-^-----\n----------------><------->->-----^------\n-v-------->------v-^-------^---^----->--\n---->---------^-----<-------<-^---------\n->-^---@--<--^-->---v---------<--->-^---\n-----^--^--v---^---v---------------v----\n--->------^------v---^----<-v---^-<-----\n----^---------<---v-<----><------>--<>--\n>-------^---^->-^------------^<^v------<\n-->-------<--v-^-^>->>-<^--------->-----\n-------------v-<-----------<->---------^\n---------------------^-----^--->--v-----\n<--<^--------^----------------<----v-->-\n>>----->---^----------->---^>-----------\n----v-^-<-------->-^v------------><<----\n>>v----^v----->----v----<-----------v---\n------------->--^--->^^--v->--------^-v-\n--<-------^-------v---^^^-<>^--<--<-----",
			output: 117
		},
		9: {
			input: "--v----><---->-^----\n---<------v->-------\n------@v------------\n-----v--<-----------\n-v------------------\n><------------^-----\n-->v------------^<--\n-----<<---<-------v-\n---------^v---------\n---------<-->-<-v---\n>-----v-----vv------\n---------<----------\n--------------------\n---^-<--^-<---------\n<---^--------v---v--\n-----------<-->---^-\n--->------<---------\n-----------v--^-----\n-------->---<-------\n----v---------------\n----------^-<v------\n------------v-----^-\n--------v---------v-\n-------------v<---v-\n------------------<-\n-------v------------\n----------------v->-\n--------------v-----\n--<-----------------\n----<v--^-----------\n---------------->---\n-----------^--------\n-------v>-^-v-<^--v-\n----^-----<-<-v-->--\n>----------------<-^\n--^<----^<--------<^\n--<-<---------------\n------^----v->----<-\n----^--v------>-----\n--v-----------^-----\n---^----------------\nv------------->-----\n-------------^------\n-^--v>^---v------<--\n-v------------------\n----<--<^-^-<---->>-\n--------------------\n--->^---<^----^-----\n-<-------------v--^-\n------<----------^--",
			output: 52
		},
		10: {
			input: "-------------------->->------<---<^-------^---^-^-\n-->-----^----<-->-->--v-------^-------------------\n------------^v--------------v------>-----^--------\n-----------<----------------------------v>--->----\nv--^--------------<-------^-----------------^-----\n-------v--^-----------------------------<-^-<-----\n---------->->-v->--^---<-----<-----^-<-------<----\n^----v<---v--^---^-^----------v^-------->---------\n-->----^-----<------------->--->v---------<--<----\n------------------^---->---------^-->-------------\n-->-------------->-->----------------------->-->--\n----<------v-----^-------<--------<-^---^--v------\n---<-<----^-<-^----><v-----------<------<--^->----\n------->---<-<---v---v---------<->--------->------\n--^v<--------v------v-------<---------><-------^--\n^-------------v--<------v-------------^-^---------\n>--v--->-v--->-----@----->---^----->^v------v-----\n---^^----------v-----<--<----------<------->--^---\n---------------------v------------<--^------>-->--\n-------->---------><->---<---v--v-<>^->--------<--",
			output: 57
		},
		11: {
			input: "@---v-\n->--v-\n-^-<--\n>--^<-\n--^---",
			output: -1
		},
		12 :{
			input: "/@\\\n---\n\\O/",
			output: -1
		},
		13: {
			input: "/@\\\n\\-/\n---",
			output: -1
		},
		14: {
			input: "@v-\nv/<\n>-^",
			output: 10
		}, 
		15: {
			input: "-@\\\n--O\n--^",
			output: 6
		},
		16: {
			input: "O-@-O",
			output: -1
		}, 
		17: {
			input: "v-\\--\n/-@-O\n-----\n\\-/--",
			output: 17
		},
		18: {
			input: "@--\\\n/-\\-\n-O/-\n\\--/",
			output: 31
		}
	};

	for(var test in tests) {
		var input = tests[test].input;
		var output = tests[test].output;
		it (test + ".\n" + input + "\noutput should equal to " + output, function() {
			var board = new Board();
			board.buildBoard(input);
			while (!board.isFinished()) {
				board.travel();
			}
			var result = board.getCount();
			expect(result).to.equal(output);
		});
	}

});